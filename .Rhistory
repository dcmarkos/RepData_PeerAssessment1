demo()
install.packages("KernSmooth")
libray(KernSmooth)
library(KernSmooth)
search()
find_rtools()
install.packages("devtools")
library(devtools)
find_rtools()
x
j
a <- b
g <- 5
x <- 10
g=x
g+x
b = 8
b
g = 5
b = 9
g+b
exp(8)
b = 2
exp(5)
exp(1)
divider = function(x,y){}
+result = x/y
divider = function (x,y){}
x <- 10
demo()
divider(x,y) = {result = x/y}
divider <- function(x,y){result x/y}
divider <- function(x,y){result = x/y}
divider(36,3)
divider <- function(x,y){result = x/y + print(result)}
divider(36,3)
divider(36,3)
result <- x/y
result <- x/y +
result <- x/y +
result <- x/y +
result <- x/y +
print(x)
print(divider(36,3))
f = c(1,2,3,4,5)
f + 4
f
d
d = f/4
d <- f/4
d
f
d
k = divider(48,4)
divider = function (x,y){result = x/y}
k = divider(48,4)
k
k = divider(96,3)
k
f+d
f
h = c(5,6,7,8,9,10,11)
h
f+h
f+h
f
h
h = c(2,3,4,8,11,6,7,8,2,14)
h
f + h
ls()
rm(b,d,k,x)
ls()
library(swirl)
swirl()
x
x[1:10]
x[is.na(x)]
y<-x[!is.na(x)]
y
y[y>0]
x[x>0]
x[!is.na(x) & x>0]
c(x[3],x[5],x[7])
x[c(3,5,7)]
x[0]
x[3000]
x[c(-2,-10)]
x[-c(2,10)]
vect<-c(foo=11,bar=2,norf=NA)
vect
names(vect)
vect2<-c(11,2,NA)
names(vect2)<-c("foo","bar","norf")
identical(vect, vect2)
vect["bar"]
vect[c("foo","bar")]
my_vector<-1:20
my_vector
dim(my_vector)
length(my_vector)
dim(my_vector)<-c(4,5)
dim(my_vector)
attributes(my_vector)
my_vector
class(my_vector)
my_matix<-my_vector
my_matrix<-my_vector
?matrix
matrix(4,5,1:20)
?matrix
matrix(1:20,4,5)
my_matrix2<-matrix(1:20,4,5)
identical(my_matrix, my_matrix2)
patients<-c("Bill","Gina","Kelly","Sean")
cbind(patients,my_matrix)
my_data<-data.frame(patients, my_matrix)
my_data
class(my_data)
cnames<-c("patient","age","weight","bp","rating","test")
?colnames
colnames(my_data)<-colnames
colnames(my_data)<-cnames
my_data
q()
x<-c(1,3,5) ; y<-C(3,2,10)
x<-c(1,3,5) ; y<-c(3,2,10)
cbind(x,y)
x<-c(1,TRUE)
x
x<-c(4,TRUE)
x
class(x)
x<-1:4;y<-2
x+y
x<-c(17,14,4,5,13,12,10)
x
x[x>=11]<-4
x
cube <- function(x,n){
x^3
}
cube(3)
x<- 1:10
if(x>5){
x<-0
}
f <- function(x){
g <- function(y) {
y + z
}
z<- 4
x + g(x)
}
z<-10
f(3)
x<-5
y<- if(x<3){}
y<- if(x<3){NA}else{10}
y
c<-rnorm(10)
c
x <- list(a = 1:5, b = rnorm(10))
lapply(x, mean)
b
x
x <- list(a = 1:4, b = rnorm(10), c = rnorm(20, 1), d = rnorm(100, 5))
lapply(x, mean)
x
?rnorm
rnorm(10,25,5)
x<-rnorm(10,25,5)
lapply(x,mean)
install.packages("RMySQL", type = "source")
library(RMySQL)
install.packages("RMySQL", type = "source")
install.packages("RMySQL", type = "source")
install.packages("RMySQL", type = "source")
r.home()
R.home()
install.packages('RMySQL',type='source')
sys.getenv("MySQL_HOME")
?sys
rtools
con = url("http://drudgereport.com/")
htmlCode = readLines(con)
close(con)
htmlCode
library(XML)
url <- "http://www.netflix.com/WiHome"
html<-htmlTreeParse(url,useInternalNodes=T)
url <- "http://www.truthrevolt.org/"
html<-htmlTreeParse(url,useInternalNodes=T)
html
xpathSSApply(html,"//div",xmlValue)
xpathSApply(html,"//div",xmlValue)
xpathSApply(html,"//title",xmlValue)
html
xpathSApply(html,"//header",xmlValue)
xpathSApply(html,"//footer",xmlValue)
install.packages("httr")
library(httr)
html2<- get(url)
url <- "http://www.breitbart.com/"
html2<- get(url)
url <- "http://www.breitbart.com"
html2<- get(url)
html2<- GET(url)
content2<-content(html2,as="text")
parsedHtml<-htmlParse(content2,asText=TRUE)
xpathSApply(parsedHtml,"//title",xmlvalue)
xpathSApply(parsedHtml,"//title",XMLvalue)
xpathSApply(html,"//footer",xmlValue)
xpathSApply(html2,"//footer",xmlValue)
html2
oauth_endpoints("github")
myapp <- oauth_app("github","9b1c36596c6e024af439","10b8d6498fb391f45a650972f6c1435135f0319c")
github_token<-oauth2.0_token(oauth_endpoints("github"),myapp)
github_token<-oauth2.0_token(oauth_endpoints("github"),myapp)
github_token<-oauth2.0_token(oauth_endpoints("github"),myapp)
myapp <- oauth_app("github","9b1c36596c6e024af439","10b8d6498fb391f45a650972f6c1435135f0319c")
github_token<-oauth2.0_token(oauth_endpoints("github"),myapp)
myapp <- oauth_app("github","9b1c36596c6e024af439","10b8d6498fb391f45a650972f6c1435135f0319c")
github_token<-oauth2.0_token(oauth_endpoints("github"),myapp)
oauth_endpoints("github")
myapp <- oauth_app("github","9b1c36596c6e024af439","10b8d6498fb391f45a650972f6c1435135f0319c")
github_token<-oauth2.0_token(oauth_endpoints("github"),myapp)
install.packages("httpuv")
library(httpuv)
library(httr)
oauth_endpoints("github")
myapp <- oauth_app("github", "9b1c36596c6e024af439","10b8d6498fb391f45a650972f6c1435135f0319c")
github_token <- oauth2.0_token(oauth_endpoints("github"), myapp)
gtoken <- config(token = github_token)
req <- GET("https://api.github.com/users/jtleek/repos", gtoken)
stop_for_status(req)
content(req)
names(req)
head(req)
content(req)
names(req)
req[,[6:7]]
class(req)
library(xml)
library(XML)
parsed<-htmlParse(req,asText=TRUE)
xpathSApply(parsed,c("//content","//date"),xmlValue)
parsed
class(parsed)
date(parsed)
xpathSApply(parsed,"//content",xmlValue)
list()
?list
req
html<-html/TreeParse("https://api.github.com/users/jtleek/repos",useInternalNodes=T)
html<-htmlTreeParse("https://api.github.com/users/jtleek/repos",useInternalNodes=T)
html
req
content(req)
class(content(req))
Q1list <-content(req)
names(Q1list)
dim(Q1list)
q1list
Q1list
Q1list$created_at
is.list(Q1list)
is.pairlist(Q1list)
q1list[1,]
Q1list[1,]
?dim
dim(Q1list)
?ncol
ncol(Q1list)
Q1list[1]
Q1list$name
Q1list[[$ name]]
Q1list[2]
Q1list[3]
Q1list[3[2]]
Q1list[3[1]]
Q1list[3[1[1]]]
Q1list[3]$id
Q1list[4]
Q1list[5]
rm(list=ls())
?qpois
?par
?boxplot
set.seed(1234)
par(mar = c(0, 0, 0, 0))
x <- rnorm(12, mean = rep(1:3, each = 4), sd = 0.2)
y <- rnorm(12, mean = rep(c(1, 2, 1), each = 4), sd = 0.2)
plot(x, y, col = "blue", pch = 19, cex = 2)
text(x + 0.05, y + 0.05, labels = as.character(1:12))
dataFrame <- data.frame(x = x, y = y)
dist(dataFrame)
hClustering <- hclust(distxy)
plot(hClustering)
dataFrame <- data.frame(x = x, y = y)
distxy <-dist(dataFrame)
hClustering <- hclust(distxy)
plot(hClustering)
pexp(6,1/5,lower.tail = FALSE)
?exp
?pexp
xvals <- seq(0, 20, length = 1000)
plot(xvals, dexp(xvals, 1/5), xlab = "Survival time in years",
ylab = "density",
frame = FALSE,
type = "l")
polygon(c(xvals[xvals >= 6], rev(xvals[xvals >= 6])),
c(dexp(xvals[xvals >= 6], 1/5), rep(0, sum(xvals >= 6))),
col = grey(.5)
)
?aggregate
?formula
?formulae
rm(list=ls())
setwd("~/GitHub")
setwd("~/GitHub/RepData_PeerAssessment1")
knit2html("PA1_template.Rmd")
library(knitr)
knit2html("PA1_template.Rmd")
rm(list=ls())
knit2html("PA1.Rmd")
